[{"C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\index.js":"1","C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\App.js":"2","C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\reportWebVitals.js":"3","C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\buildings\\Buildings.js":"4","C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\components\\MapView.js":"5","C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\components\\VenueMarkers.js":"6","C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\components\\MarkerPopup.js":"7","C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\components\\VenueLocationIcon.js":"8","C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\components\\Home.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":2777,"mtime":1613417048939,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":5283,"mtime":1613414388826,"results":"14","hashOfConfig":"11"},{"size":2214,"mtime":1613416724978,"results":"15","hashOfConfig":"11"},{"size":691,"mtime":1613413615578,"results":"16","hashOfConfig":"11"},{"size":273,"mtime":1613412360778,"results":"17","hashOfConfig":"11"},{"size":330,"mtime":1599194334000,"results":"18","hashOfConfig":"11"},{"size":999,"mtime":1599194334000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1khviqm",{"filePath":"23","messages":"24","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\index.js",[],["41","42"],"C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\App.js",["43","44","45","46","47","48","49","50","51","52","53"],"C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\reportWebVitals.js",[],"C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\buildings\\Buildings.js",["54","55","56","57","58","59","60","61","62","63","64","65","66"],"import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ToggleButton,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\nimport Fuse from \"fuse.js\";\r\nimport MapView from \"../components/MapView\";\r\n\r\nclass Buildings extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n    tlv:true,\r\n    Jerusalem:false,\r\n      value: \"\",\r\n      view: true,\r\n      jsonData: {},\r\n      picturesDB: {},\r\n      avilableSites: {},\r\n      selectedDay: undefined,\r\n      formatDate: \"\",\r\n      locale: \"he\",\r\n\r\n      suggestions: [],\r\n      chosen_park: \"\",\r\n      input: \"\",\r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  showAvailableSites() {\r\n    const sites = this.state.avilableSites;\r\n  }\r\n\r\n  convertRegionID2Name(id) {\r\n    switch (id) {\r\n      case 56:\r\n        return \"north\";\r\n      case 57:\r\n        return \"center\";\r\n      case 58:\r\n        return \"Jerusalem\";\r\n      case 59:\r\n        return \"south\";\r\n      default:\r\n        return \"center\";\r\n    }\r\n  }\r\n\r\n\r\n\r\n  formatDate(date) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n    return [year, month, day].join(\"\");\r\n  }\r\n\r\n  formatIsraeliDate(date) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n    return [day, month, year].join(\"/\");\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    let sitesTable = { north: [], center: [], Jerusalem: [], south: [] };\r\n    let checkedN = this.state.tlv;\r\n    let checkedJ = this.state.Jerusalem;\r\n    let checkedC = this.state.center;\r\n    let checkedS = this.state.south;\r\n    const today = new Date();\r\n    const fortnightAway = new Date(Date.now() + 12096e5);\r\n    let input = this.state.input;\r\n\r\n\r\n\r\n    const fuseNorth = new Fuse(sitesTable[\"north\"], {\r\n      keys: [\"name\"],\r\n      threshold: 0.5,\r\n    });\r\n    const fuseCenter = new Fuse(sitesTable[\"center\"], {\r\n      keys: [\"name\"],\r\n      threshold: 0.5,\r\n    });\r\n    const fuseJerusalem = new Fuse(sitesTable[\"Jerusalem\"], {\r\n      keys: [\"name\"],\r\n      threshold: 0.5,\r\n    });\r\n    const fuseSouth = new Fuse(sitesTable[\"south\"], {\r\n      keys: [\"name\"],\r\n      threshold: 0.5,\r\n    });\r\n\r\n    return (\r\n\r\n        <Container fluid className=\"bg-teva-sand\">\r\n          <Row>\r\n            <Col>\r\n\r\n                              <div>\r\n                                <h4 className=\"d-block\">סינון לפי איזור:</h4>\r\n                              </div>\r\n                              <ButtonGroup toggle className=\"my-2 d-flex\">\r\n                                <ToggleButton\r\n                                  className=\"Btn-region\"\r\n                                  type=\"checkbox\"\r\n                                  variant=\"secondary\"\r\n                                  checked={checkedN}\r\n                                  value=\"1\"\r\n                                  onChange={(e) => this.setState({\r\n                                        first: false,\r\n                                        tlv: true,\r\n                                        Jerusalem: false,\r\n                                        center: false,\r\n                                        south: false,\r\n                                        })\r\n                                  }\r\n                                >\r\n                                  <a className=\"region\">תל אביב</a>\r\n                                </ToggleButton>\r\n\r\n                                <ToggleButton\r\n                                  className=\"Btn-region\"\r\n                                  type=\"checkbox\"\r\n                                  variant=\"secondary\"\r\n                                  checked={checkedJ}\r\n                                  value=\"2\"\r\n                                  onChange={(e) =>\r\n                                    this.setState({\r\n                                        first: false,\r\n                                        tlv: false,\r\n                                        Jerusalem: true,\r\n                                        center: false,\r\n                                        south: false,\r\n                                        })\r\n                                  }\r\n                                >\r\n                                  <a className=\"region\"> ירושלים</a>\r\n                                  </ToggleButton>\r\n\r\n  \r\n                              </ButtonGroup>\r\n\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n              <Col>\r\n              {this.state.tlv ? \r\n              <iframe src=\"https://www.google.com/maps/d/u/0/embed?mid=1fpJk0jT_swhxwqLNMy9DkY6Bc0zzXGWJ\" width=\"640\" height=\"480\"></iframe>\r\n                : \r\n               this.state.Jerusalem?\r\n                <MapView />\r\n               :\r\n              \r\n               \r\n                <h2> מה נשמע אלונה?</h2>}\r\n              </Col>\r\n          </Row>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Buildings;","C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\components\\MapView.js",["67","68","69"],"import React, { useState, useEffect } from \"react\";\nimport { Map, TileLayer,MapContainer as LeafletMap } from \"react-leaflet\";\nimport data from \"../assets/data.json\";\nimport Markers from \"./VenueMarkers\";\nimport { Button, Container,Row,Col } from 'react-bootstrap';\n\n\nimport { useLocation, useHistory } from \"react-router-dom\";\n\n\nimport \"leaflet/dist/leaflet.css\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst MapView = (props) => {\n  const [state, setState] = useState({\n    currentLocation: { lat: 32.0429994 , lng: 34.7661248  },\n    zoom: 8,\n    data,\n    showTLV:true,\n    showBS:true,\n  });\n\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    console.log(location);\n    if (true) {\n      const currentLocation = {\n        lat:32.0429994,\n        lng: 34.7661248,\n      };\n      console.log(state);\n      setState({\n        ...state,\n        data: {\n          tlv: state.data.tlv.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          bs: state.data.bs.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n        },\n        currentLocation,\n      });\n \n    }\n  }, []);\n\n  return (\n      <Container fluid>\n        <Row>\n          <Col>\n          <h2>\n              תלחצי עלינו\n\n              </h2>\n            <Button onClick = {()=>setState({...state, showTLV: !state.showTLV})}>\n              תל אביב\n              </Button>\n              <Button onClick =  {()=>setState({...state, showBS: !state.showBS})}>\n              לוס-אנג'ס\n              </Button>\n     \n          </Col>\n        </Row>\n        <Row>\n          <Col>\n          \n    <LeafletMap center={state.currentLocation} zoom={state.zoom}\n  >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <Markers tlv={state.data.tlv} bs = {state.data.bs}  showTLV = {state.showTLV} showBS={state.showBS}/>\n    </LeafletMap>\n          </Col>\n        </Row>\n      </Container>\n\n\n  );\n};\n\nexport default MapView;\n","C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\components\\VenueMarkers.js",[],"C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\components\\MarkerPopup.js",[],"C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\components\\VenueLocationIcon.js",[],"C:\\Users\\NivRi\\personal_projects\\mini_geo_project\\geo-app\\src\\components\\Home.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":35},{"ruleId":"74","severity":1,"message":"78","line":8,"column":10,"nodeType":"76","messageId":"77","endLine":8,"endColumn":13},{"ruleId":"74","severity":1,"message":"79","line":8,"column":15,"nodeType":"76","messageId":"77","endLine":8,"endColumn":24},{"ruleId":"74","severity":1,"message":"80","line":8,"column":26,"nodeType":"76","messageId":"77","endLine":8,"endColumn":32},{"ruleId":"74","severity":1,"message":"81","line":8,"column":34,"nodeType":"76","messageId":"77","endLine":8,"endColumn":39},{"ruleId":"74","severity":1,"message":"82","line":14,"column":3,"nodeType":"76","messageId":"77","endLine":14,"endColumn":12},{"ruleId":"74","severity":1,"message":"83","line":15,"column":3,"nodeType":"76","messageId":"77","endLine":15,"endColumn":6},{"ruleId":"74","severity":1,"message":"84","line":16,"column":3,"nodeType":"76","messageId":"77","endLine":16,"endColumn":6},{"ruleId":"74","severity":1,"message":"85","line":17,"column":3,"nodeType":"76","messageId":"77","endLine":17,"endColumn":6},{"ruleId":"74","severity":1,"message":"86","line":18,"column":3,"nodeType":"76","messageId":"77","endLine":18,"endColumn":9},{"ruleId":"74","severity":1,"message":"87","line":20,"column":8,"nodeType":"76","messageId":"77","endLine":20,"endColumn":17},{"ruleId":"74","severity":1,"message":"88","line":40,"column":11,"nodeType":"76","messageId":"77","endLine":40,"endColumn":16},{"ruleId":"74","severity":1,"message":"89","line":90,"column":9,"nodeType":"76","messageId":"77","endLine":90,"endColumn":17},{"ruleId":"74","severity":1,"message":"90","line":91,"column":9,"nodeType":"76","messageId":"77","endLine":91,"endColumn":17},{"ruleId":"74","severity":1,"message":"91","line":92,"column":11,"nodeType":"76","messageId":"77","endLine":92,"endColumn":16},{"ruleId":"74","severity":1,"message":"92","line":93,"column":11,"nodeType":"76","messageId":"77","endLine":93,"endColumn":24},{"ruleId":"74","severity":1,"message":"93","line":94,"column":9,"nodeType":"76","messageId":"77","endLine":94,"endColumn":14},{"ruleId":"74","severity":1,"message":"94","line":98,"column":11,"nodeType":"76","messageId":"77","endLine":98,"endColumn":20},{"ruleId":"74","severity":1,"message":"95","line":102,"column":11,"nodeType":"76","messageId":"77","endLine":102,"endColumn":21},{"ruleId":"74","severity":1,"message":"96","line":106,"column":11,"nodeType":"76","messageId":"77","endLine":106,"endColumn":24},{"ruleId":"74","severity":1,"message":"97","line":110,"column":11,"nodeType":"76","messageId":"77","endLine":110,"endColumn":20},{"ruleId":"98","severity":1,"message":"99","line":140,"column":35,"nodeType":"100","endLine":140,"endColumn":57},{"ruleId":"98","severity":1,"message":"99","line":159,"column":35,"nodeType":"100","endLine":159,"endColumn":57},{"ruleId":"101","severity":1,"message":"102","line":171,"column":15,"nodeType":"100","endLine":171,"endColumn":132},{"ruleId":"74","severity":1,"message":"78","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"74","severity":1,"message":"103","line":26,"column":9,"nodeType":"76","messageId":"77","endLine":26,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":52,"column":6,"nodeType":"106","endLine":52,"endColumn":8,"suggestions":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Map' is defined but never used.","'TileLayer' is defined but never used.","'Marker' is defined but never used.","'Popup' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","'Navbar' is defined but never used.","'Buildings' is defined but never used.","'sites' is assigned a value but never used.","'checkedC' is assigned a value but never used.","'checkedS' is assigned a value but never used.","'today' is assigned a value but never used.","'fortnightAway' is assigned a value but never used.","'input' is assigned a value but never used.","'fuseNorth' is assigned a value but never used.","'fuseCenter' is assigned a value but never used.","'fuseJerusalem' is assigned a value but never used.","'fuseSouth' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [location, state]",{"range":"113","text":"114"},[1251,1253],"[location, state]"]