{"version":3,"sources":["firestore/firebase.js","components/VenueLocationIcon.js","components/MarkerPopup.js","components/VenueMarkers.js","components/MapView.js","components/Home.js","App.js","serviceWorker.js","index.js","assets/venue_location_icon.svg"],"names":["db","Firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","VenueLocationIcon","L","icon","iconUrl","require","iconRetinaUrl","iconAnchor","shadowUrl","shadowSize","shadowAnchor","iconSize","className","MarkerPopup","props","data","street","b_type","id","comments","updateDB","useState","showText","setShowText","text","setText","commentsList","undefined","map","comment","Popup","Button","onClick","type","onChange","e","target","value","console","log","VenueMarkers","marks","showGroupStatus","JSON","stringify","city_marks","Object","keys","reduce","acc","sub_set_name","concat","venue","i","Marker","key","position","geometry","MapView","currentLocation","lat","lng","zoom","showAllTLV","showBS","showJLM","showStatusBS","museum_bs","religion_bs","rest_bs","school_bs","tomb_bs","showStatusHAIFA","garden_haifa","hotel_haifa","knesset_haifa","relig_haifa","rest_haifa","school_haifa","tomb_haifa","showStatusJLM","bet_kneset_jer","garden_jer","hotel_jer","rest_jer","school_jer","tomb_jer","showStatusTLV","eclectic_tlv","inter_tlv","knesset_tlv","museum_tlv","people_tlv","rest_tlv","school_tlv","special_tlv","state","setState","location","useLocation","history","useHistory","useEffect","latitude","longitude","tlv_all","name","jer_all","haifa_all","bs_all","replace","pathname","showAllCity","city","new_state","final_state","Container","fluid","Row","Col","role","aria-label","variant","ToggleButton","checked","Map","center","TileLayer","url","attribution","Home","fetch","then","resp","json","movies","records","catch","err","navigator","geolocation","getCurrentPosition","coords","error","code","message","enableHighAccuracy","to","App","handleDBUpdate","jsonDB","city1","cat","cat1","place","place1","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","comments2","putRequesteInDB","ref","set","jsonData","handleClick","doc","country","loading","activeDocRef","activeTab","jsonURL","jsonKey","on","querySnapShot","val","this","path","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.68fa8cdc.chunk.js","sourcesContent":["import Firebase from \"firebase\";\r\n\r\nconst config = {\r\n\r\n    apiKey: \"AIzaSyBHf0Ov6I_tkRSZUFnfvw01i2KhRFDmEQ8\",\r\n    authDomain: \"bgu-project.firebaseapp.com\",\r\n    databaseURL: \"https://bgu-project-default-rtdb.firebaseio.com\",\r\n    projectId: \"bgu-project\",\r\n    storageBucket: \"bgu-project.appspot.com\",\r\n    messagingSenderId: \"611454908155\",\r\n    appId: \"1:611454908155:web:7ba6cc379c1c1e82e0a25e\",\r\n    measurementId: \"G-9P4GYD0677\"\r\n      \r\n }\r\n\r\n//!firebase.apps.length ? firebase.initializeApp(config) : null;\r\nconst app = Firebase.initializeApp(config);\r\nexport const db = app.database();\r\n","import L from \"leaflet\";\n\nexport const VenueLocationIcon = L.icon({\n  iconUrl: require(\"../assets/venue_location_icon.svg\"),\n  iconRetinaUrl: require(\"../assets/venue_location_icon.svg\"),\n  iconAnchor: null,\n  shadowUrl: null,\n  shadowSize: null,\n  shadowAnchor: null,\n  iconSize: [25, 25],\n  className: \"leaflet-venue-icon\",\n});\n","import { Button } from 'react-bootstrap';\nimport React, {useState} from \"react\";\nimport { Popup } from \"react-leaflet\";\n\n\nconst MarkerPopup = (props) => {\n  const { street,b_type,id,comments } = props.data;\n  const {updateDB, data } = props;\n  const  [showText, setShowText ]= useState(false)\n  const  [text, setText ]= useState('')\n\n   function poiUpdae(e) {\n     console.log( id + ' '+text)\n    updateDB(id,text);\n  }\n\n  const commentsList = comments !== undefined? comments.map((comment) =><li>{comment}</li> ) : <li> אין הערות</li>\n\n\n\n\n  return (\n    <Popup>\n      <div> {b_type}</div>\n      <div>{street} </div>\n      <div>הערות גולשים:</div>\n      <div>{commentsList}</div>\n      <Button onClick={()=> {setShowText(true); }}>\n        לחץ להוספת פרטים\n      </Button>\n\n      {\n       showText? \n        <div>\n            <textarea type='text'  onChange={e => {setText(e.target.value); console.log(text)}}>\n            </textarea>\n            <Button onClick={poiUpdae}>\n              שמור שינויים\n            </Button>\n        </div>\n        : null\n      }\n     \n\n    </Popup>\n  );\n};\n\nexport default MarkerPopup;\n","import React, { useEffect } from \"react\";\nimport { Marker } from \"react-leaflet\";\nimport { VenueLocationIcon } from \"./VenueLocationIcon\";\nimport MarkerPopup from \"./MarkerPopup\";\n\nconst VenueMarkers = (props) => {\n  const { marks,showGroupStatus,updateDB } = props;\n  console.log('in vnenue: '   +JSON.stringify(showGroupStatus))\n  const city_sub_sets = Object.keys(marks)\n  //const keys = Object.keys(showGroupStatus)\n  const city_marks = city_sub_sets.reduce( (acc,sub_set_name) => showGroupStatus[sub_set_name]? acc.concat(\n    marks[sub_set_name].map((venue, i) => (\n      <Marker key={i} position={venue.geometry} icon={VenueLocationIcon}>\n        <MarkerPopup updateDB={updateDB} data={venue} />\n      </Marker>\n    )\n  )) \n  : acc\n  \n   ,[]);\n\n\n\n\n\n\n  \n  return <>\n  {city_marks}\n  </>;\n};\n\nexport default VenueMarkers;\n","import React, { useState, useEffect } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport data from \"../assets/data.json\";\nimport Markers from \"./VenueMarkers\";\nimport {ToggleButton, ButtonGroup,Button, Container,Row,Col} from 'react-bootstrap';\nimport \"../App.css\";\n\n\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst MapView = (props) => {\n  const [state, setState] = useState({\n    currentLocation: { lat: 31.268733, lng: 34.7661248  },\n    zoom: 8,\n    data:props.db,\n    showAllTLV:false,\n    showBS:true,\n    showJLM:false,\n    showStatusBS:{\n      museum_bs:false,\n      religion_bs:false,\n      rest_bs:false,\n      school_bs:false,\n      tomb_bs:false,\n    },\n  \n    showStatusHAIFA:{\n      garden_haifa:false,\n      hotel_haifa:false,\n      knesset_haifa: false,\n      relig_haifa:false,\n      rest_haifa:false,\n      school_haifa:false,\n      tomb_haifa:false,\n    },\n\n\n    showStatusJLM: {\n      bet_kneset_jer:false,\n      garden_jer:false,\n      hotel_jer:false,\n      rest_jer:false,\n      school_jer:false,\n      tomb_jer:false,\n    },\n\n\n    showStatusTLV: {\n      eclectic_tlv:false,\n      inter_tlv:false,\n      knesset_tlv:false,\n      museum_tlv:false,\n      people_tlv:false,\n      rest_tlv:false,\n      school_tlv:false,\n      special_tlv:false,\n    },\n\n\n    updateDB:props.updateDB\n  });\n\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (location.state.latitude && location.state.longitude) {\n      const currentLocation = {\n        lat: location.state.latitude,\n        lng: location.state.longitude,\n      };\n      console.log(state);\n      setState({\n        ...state,\n        data: {\n          eclectic_tlv: state.data.tlv_all.eclectic_tlv.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          inter_tlv: state.data.tlv_all.inter_tlv.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          knesset_tlv: state.data.tlv_all.knesset_tlv.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          museum_tlv: state.data.tlv_all.museum_tlv.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          rest_tlv: state.data.tlv_all.rest_tlv.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          school_tlv: state.data.tlv_all.school_tlv.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          special_tlv: state.data.tlv_all.special_tlv.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n\n          // JERUSALEM\n\n          bet_kneset_jer: state.data.jer_all.bet_kneset_jer.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          garden_jer: state.data.jer_all.garden_jer.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n\n          hotel_jer: state.data.jer_all.hotel_jer.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n\n          rest_jer: state.data.jer_all.rest_jer.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n\n          school_jer: state.data.jer_all.school_jer.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          tomb_jer: state.data.jer_all.tomb_jer.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n\n          //HAIFA\n          garden_haifa: state.data.haifa_all.garden_haifa.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          hotel_haifa: state.data.haifa_all.hotel_haifa.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          knesset_haifa: state.data.haifa_all.knesset_haifa.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          relig_haifa: state.data.haifa_all.relig_haifa.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          rest_haifa: state.data.haifa_all.rest_haifa.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          school_haifa: state.data.haifa_all.school_haifa.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          tomb_haifa: state.data.haifa_all.tomb_haifa.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n\n          //BEER SHEVA\n          museum_bs: state.data.bs_all.museum_bs.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          religion_bs: state.data.bs_all.religion_bs.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          rest_bs: state.data.bs_all.rest_bs.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          school_bs: state.data.bs_all.school_bs.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          tomb_bs: state.data.bs_all.tomb_bs.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n      }\n      ,\n        currentLocation,\n      });\n      history.replace({\n        pathname: \"/map\",\n        state: {},\n      });\n    }\n  }, [location]);\n\n  const showAllCity = (city) =>{\n\n    let keys = Object.keys(state[city])\n    console.log('KEys ' + keys )\n    const new_state = {}\n    for (let key in keys){\n      new_state[keys[key]] = !state[city][keys[key]]\n    }\n    console.log('output ' + new_state )\n    console.log(new_state)\n    let final_state = {\n      ...state\n\n    }\n    final_state[city] = new_state\n\n    setState(final_state)\n  }\n\n  return (\n      <Container fluid  className=\"text-light bg-blue py-3\">\n          <Row>\n            <Col>\n              <h1>\n                <span> שומרים על הבניינים לשימור</span>\n                <span role=\"img\" aria-label=\"אוהל\" className=\"mx-1\">\n                  \n                </span>\n\n              </h1>\n              <h2>ריכוז מאגרי מידע על מבנים לשימור במדינת ישראל</h2>\n            </Col>\n          </Row>\n        <Row>\n          <Col>\n            <Row>\n              TLV: \n              <Col>\n                <Button \n                                  variant=\"secondary\"onClick = {()=>showAllCity('showStatusTLV')}>\n                הכל - תל אביב\n                </Button> \n                | \n                <ToggleButton value=\"1\" className=\"Btn-region\" checked ={state.showStatusTLV.eclectic_tlv}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusTLV: {...state.showStatusTLV , eclectic_tlv: !state.showStatusTLV.eclectic_tlv}})}>\n                אקלקטי\n                </ToggleButton> \n                | \n                <ToggleButton value=\"1\" className=\"Btn-region\" checked ={state.showStatusTLV.inter_tlv}  type=\"checkbox\"\n                                  variant=\"secondary\"onClick = {()=>setState({...state, showStatusTLV: {...state.showStatusTLV ,inter_tlv: !state.showStatusTLV.inter_tlv }})}>\n                inter_tlv\n                </ToggleButton> \n                | \n                <ToggleButton value=\"1\" className=\"Btn-region\" checked ={state.showStatusTLV.knesset_tlv}  type=\"checkbox\"\n                                  variant=\"secondary\"onClick = {()=>setState({...state, showStatusTLV: { ...state.showStatusTLV ,knesset_tlv: !state.showStatusTLV.knesset_tlv}})}>\n                knesset_tlv\n                </ToggleButton> \n                | \n                <ToggleButton value=\"1\" className=\"Btn-region\" checked ={state.showStatusTLV.museum_tlv}  type=\"checkbox\"\n                                  variant=\"secondary\"onClick = {()=>setState({...state, showStatusTLV: {...state.showStatusTLV ,museum_tlv:!state.showStatusTLV.museum_tlv}})}>\n                museum_tlv\n                </ToggleButton> \n                | \n                <ToggleButton value=\"1\" className=\"Btn-region\" checked ={state.showStatusTLV.people_tlv}  type=\"checkbox\"\n                                  variant=\"secondary\"onClick = {()=>setState({...state, showStatusTLV: {...state.showStatusTLV ,people_tlv: !state.showStatusTLV.people_tlv}})}>\n                people_tlv\n                </ToggleButton> \n                | \n                <ToggleButton value=\"1\" className=\"Btn-region\" checked ={state.showStatusTLV.rest_tlv}  type=\"checkbox\"\n                                  variant=\"secondary\"onClick = {()=>setState({...state, showStatusTLV:{...state.showStatusTLV ,rest_tlv: !state.showStatusTLV.rest_tlv}})}>\n                rest_tlv\n                </ToggleButton> \n                | \n                <ToggleButton value=\"1\" className=\"Btn-region\" checked ={state.showStatusTLV.school_tlv}  type=\"checkbox\"\n                                  variant=\"secondary\"onClick = {()=>setState({...state, showStatusTLV: {...state.showStatusTLV ,school_tlv: !state.showStatusTLV.school_tlv}})}>\n                school_tlv\n                </ToggleButton> \n                | \n                <ToggleButton value=\"1\" className=\"Btn-region\" checked ={state.showStatusTLV.special_tlv}  type=\"checkbox\"\n                                  variant=\"secondary\"onClick = {()=>setState({...state, showStatusTLV: {...state.showStatusTLV ,special_tlv:!state.showStatusTLV.special_tlv}})}>\n                special_tlv\n                </ToggleButton> \n                | \n              </Col>\n            </Row>\n\n              {/* <ToggleButton value=\"1\" className=\"Btn-region\" checked ={state.showStatusTLV.eclectic_tlv}  type=\"checkbox\"\n                                  variant=\"secondary\"onClick =  {()=>setState({...state, showBS: !state.showBS})}>\n              לוס-אנג'ס\n              </ToggleButton>\n              <ToggleButton value=\"1\" className=\"Btn-region\" checked ={state.showStatusTLV.eclectic_tlv}  type=\"checkbox\"\n                                  variant=\"secondary\"onClick = {()=>setState({...state, showJLM: !state.showJLM})}>\n              ירושלים\n              </ToggleButton>\n      */}\n          </Col>\n        </Row>\n       {/* JERUSALEM*/ }\n        <Row>\n          <Col>\n          JLM :\n          <Button \n                                  variant=\"secondary\"onClick = {()=>showAllCity('showStatusJLM')}>\n                הכל -ירושלים\n                </Button> \n                | \n          <ToggleButton className=\"Btn-region\" checked ={state.showStatusJLM.bet_kneset_jer}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusJLM: {...state.showStatusJLM, bet_kneset_jer: !state.showStatusJLM.bet_kneset_jer}})}>\n              bet_kneset_jer\n              </ToggleButton>\n\n              <ToggleButton className=\"Btn-region\" checked ={state.showStatusJLM.garden_jer}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusJLM: {...state.showStatusJLM, garden_jer: !state.showStatusJLM.garden_jer}})}>\n              bet_kneset_jer\n              </ToggleButton>\n              <ToggleButton className=\"Btn-region\" checked ={state.showStatusJLM.hotel_jer}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusJLM: {...state.showStatusJLM, hotel_jer: !state.showStatusJLM.hotel_jer}})}>\n              bet_kneset_jer\n              </ToggleButton>\n              <ToggleButton className=\"Btn-region\" checked ={state.showStatusJLM.rest_jer}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusJLM: {...state.showStatusJLM, rest_jer: !state.showStatusJLM.rest_jer}})}>\n              bet_kneset_jer\n              </ToggleButton>\n              <ToggleButton className=\"Btn-region\" checked ={state.showStatusJLM.school_jer}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusJLM: {...state.showStatusJLM, school_jer: !state.showStatusJLM.school_jer}})}>\n              bet_kneset_jer\n              </ToggleButton>\n              <ToggleButton className=\"Btn-region\" checked ={state.showStatusJLM.tomb_jer}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusJLM: {...state.showStatusJLM, tomb_jer: !state.showStatusJLM.tomb_jer}})}>\n              bet_kneset_jer\n              </ToggleButton>\n          </Col>\n        </Row>\n\n        {/**HAIFA */}\n        <Row>\n          <Col>\n          HAIFA : \n          <Button \n                                  variant=\"secondary\"onClick = {()=>showAllCity('showStatusHAIFA')}>\n                הכל -חיפה\n                </Button> \n                | \n          <ToggleButton className=\"Btn-region\" checked ={state.showStatusHAIFA.garden_haifa}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusHAIFA: {...state.showStatusHAIFA, garden_haifa: !state.showStatusHAIFA.garden_haifa}})}>\n              garden_haifa\n          </ToggleButton>\n          <ToggleButton className=\"Btn-region\" checked ={state.showStatusHAIFA.hotel_haifa}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusHAIFA: {...state.showStatusHAIFA, hotel_haifa: !state.showStatusHAIFA.hotel_haifa}})}>\n              hotel_haifa\n          </ToggleButton>\n          <ToggleButton className=\"Btn-region\" checked ={state.showStatusHAIFA.knesset_haifa}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusHAIFA: {...state.showStatusHAIFA, knesset_haifa: !state.showStatusHAIFA.knesset_haifa}})}>\n              knesset_haifa\n          </ToggleButton>\n          <ToggleButton className=\"Btn-region\" checked ={state.showStatusHAIFA.relig_haifa}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusHAIFA: {...state.showStatusHAIFA, relig_haifa: !state.showStatusHAIFA.relig_haifa}})}>\n              relig_haifa\n          </ToggleButton>\n          <ToggleButton className=\"Btn-region\" checked ={state.showStatusHAIFA.rest_haifa}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusHAIFA: {...state.showStatusHAIFA, rest_haifa: !state.showStatusHAIFA.rest_haifa}})}>\n              rest_haifa\n          </ToggleButton>\n          <ToggleButton className=\"Btn-region\" checked ={state.showStatusHAIFA.school_haifa}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusHAIFA: {...state.showStatusHAIFA, garden_haifa: !state.showStatusHAIFA.school_haifa}})}>\n              school_haifa\n          </ToggleButton>\n          <ToggleButton className=\"Btn-region\" checked ={state.showStatusHAIFA.tomb_haifa}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusHAIFA: {...state.showStatusHAIFA, garden_haifa: !state.showStatusHAIFA.tomb_haifa}})}>\n              tomb_haifa\n          </ToggleButton>\n          \n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n          BEER SHEVA :\n          <Button \n                                  variant=\"secondary\"onClick = {()=>showAllCity('showStatusBS')}>\n                הכל - ב\"ש\n            </Button> \n\n            <ToggleButton className=\"Btn-region\" checked ={state.showStatusBS.museum_bs}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusBS: {...state.showStatusBS, museum_bs: !state.showStatusBS.museum_bs}})}>\n              museum_bs\n          </ToggleButton>    | \n          <ToggleButton className=\"Btn-region\" checked ={state.showStatusBS.religion_bs}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusBS: {...state.showStatusBS, religion_bs: !state.showStatusBS.religion_bs}})}>\n              religion_bs\n          </ToggleButton>    \n          <ToggleButton className=\"Btn-region\" checked ={state.showStatusBS.rest_bs}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusBS: {...state.showStatusBS, rest_bs: !state.showStatusBS.rest_bs}})}>\n              rest_bs\n          </ToggleButton>    \n          <ToggleButton className=\"Btn-region\" checked ={state.showStatusBS.school_bs}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusBS: {...state.showStatusBS, school_bs: !state.showStatusBS.school_bs}})}>\n              school_bs\n          </ToggleButton>    \n          <ToggleButton className=\"Btn-region\" checked ={state.showStatusBS.tomb_bs}  type=\"checkbox\"\n                                  variant=\"secondary\" onClick = {()=>setState({...state, showStatusBS: {...state.showStatusBS, tomb_bs: !state.showStatusBS.tomb_bs}})}>\n              tomb_bs\n          </ToggleButton>    \n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n          \n            <Map center={state.currentLocation} zoom={state.zoom}>\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              />\n              {console.log('in mapview: ' + JSON.stringify(state.showStatusTLV))}\n              <Markers updateDB={state.updateDB} db={props.db} marks={state.data.tlv_all}  showGroupStatus = {state.showStatusTLV} />\n              <Markers updateDB={state.updateDB} db={props.db} marks={state.data.jer_all}  showGroupStatus = {state.showStatusJLM} />\n              <Markers updateDB={state.updateDB} db={props.db} marks={state.data.haifa_all}  showGroupStatus = {state.showStatusHAIFA} />\n              <Markers updateDB={state.updateDB} db={props.db} marks={state.data.bs_all}  showGroupStatus = {state.showStatusBS} />\n\n            \n            \n            </Map>\n          </Col>\n        </Row>\n      </Container>\n\n\n  );\n};\n\nexport default MapView;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {Airtable} from 'airtable';\n\nconst Home = () => {\n  const [state, setState] = useState({\n    longitude: 0,\n    latitude: 0,\n  });\n\n\n\n  useEffect(() => {\n    fetch('https://api.airtable.com/v0/appgOPm5an5ZzNvkk/favorites?api_key=keyiw9cfT8UR5IwVM')\n    .then((resp) => resp.json())\n    .then(data => {\n       this.setState({ movies: data.records });\n    }).catch(err => {\n      // Error :(\n    });\n\n    navigator.geolocation.getCurrentPosition(\n      function (position) {\n        // console.log(position);\n        setState({\n          longitude: position.coords.longitude,\n          latitude: position.coords.latitude,\n        });\n      },\n      function (error) {\n        console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n      },\n      {\n        enableHighAccuracy: true,\n      }\n    );\n  }, []);\n\n  return (\n    <div>\n      <h1>Geolocation</h1>\n      <p>Latitude: {state.latitude}</p>\n      <p>longitude: {state.longitude}</p>\n\n      <Link\n        to={{\n          pathname: \"/map\",\n          // state: {\n          //   hello: 'world'\n          // }\n          state,\n        }}\n      >\n        See marker\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { Component,useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport firebase from \"./firestore/firebase\";\nimport dataDB from \"./assets/data.json\";\nimport {db} from './firestore/firebase';\n\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport MapView from \"./components/MapView\";\nimport Home from \"./components/Home\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      loading:true,\n      activeDocRef: undefined,\n      activeTab:\"welcome\",\n      jsonURL:\"https://api.jsonbin.io/b/602fced5bd6b755d0199c538\",\n      jsonKey:\"$2b$10$2/NjcZqLfdoBPkpWyT71BuJeCNvU8FXl8QLhGcnAJUdAdbLdsjYK.\"\n\n    };\n    // const db = firebase.settings({\n    //   timestampsInSnapshots: true\n    // });\n  }\n  \n  componentDidMount() {\n    db.ref('/').on('value', querySnapShot => {\n      let data = querySnapShot.val() ? querySnapShot.val() : {};\n      this.setState({jsonDB:data, loading:false})\n    });\n\n}\n\n\n  \n\n\n  handleDBUpdate = (id,text) => {\n    const data = this.state.jsonDB\n\n    for (var city in Object.keys(data)) {\n      const city1 =  Object.keys(data)[city]\n\n        for (var cat in Object.keys(data[city1])) {\n          const cat1 = Object.keys(data[city1])[cat]\n          console.log(cat1)\n\n          for (var place in Object.keys(data[city1][cat1])){\n            const place1 = Object.keys(data[city1][cat1])[place]\n\n\n            if(data[city1]?.[cat1]?.[place1]) {\n              console.log(city1 + cat1  + place1)\n\n              if (data[city1][cat1][place1]['id'] === id){\n                var today = new Date();\n                var dd = String(today.getDate()).padStart(2, '0');\n                var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n                var yyyy = today.getFullYear();\n\n                today = dd + '/' + mm + '/' + yyyy;\n\n                var comments = data[city1][cat1][place1]['comments'] \n                var comments2 = (comments === undefined) ? [today + ' : ' + text] : [comments].concat([today + ' : ' +text])\n    \n                data[city1][cat1][place1]['comments']  = comments2\n                this.putRequesteInDB(data)\n  \n                return\n              }\n  \n            }\n\n            \n  \n          }\n        }\n\n\n\n    }\n  }\n\n\n  putRequesteInDB = (data) => {\n    db.ref('/').set(data);\n    this.setState({jsonData:data})\n  }\n\n\n\n  handleClick = (e) =>{\n    \n      const db = this.state.db\n      \n       db.doc(\"LA\").set({\n         name: \"Los Angeles\",\n         state: \"CA\",\n         country: \"USA\"\n     })\n     .then(() => {\n         console.log(\"Document successfully written!\");\n     })\n     .catch((error) => {\n         console.error(\"Error writing document: \", error);\n     });\n  }\n\n\n\n\n\n  render() {\n     return (\n      <div>\n      <button onClick={this.handleClick}>מניש</button>\n      <Router>\n        <Switch>\n          <Route path=\"/map\">\n            {\n              this.state.loading? 'loading' :            \n              <MapView updateDB = {this.handleDBUpdate} db ={this.state.jsonDB}/>\n\n            }\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/venue_location_icon.2ceaf661.svg\";"],"sourceRoot":""}