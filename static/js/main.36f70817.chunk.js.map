{"version":3,"sources":["firestore/firebase.js","components/VenueLocationIcon.js","components/MarkerPopup.js","components/VenueMarkers.js","components/MapView.js","components/Home.js","App.js","serviceWorker.js","index.js","assets/venue_location_icon.svg"],"names":["db","Firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","VenueLocationIcon","L","icon","iconUrl","require","iconRetinaUrl","iconAnchor","shadowUrl","shadowSize","shadowAnchor","iconSize","className","MarkerPopup","props","data","address","description","id","comments","updateDB","useState","showText","setShowText","text","setText","Popup","Button","onClick","type","onChange","e","target","value","console","log","VenueMarkers","tlv","bs","jlm","showBS","showTLV","showJLM","markersTLV","map","venue","i","Marker","key","position","geometry","markersbs","markersjlm","MapView","currentLocation","lat","lng","zoom","state","setState","location","useLocation","history","useHistory","useEffect","latitude","longitude","concat","name","replace","pathname","Container","fluid","Row","Col","role","aria-label","Map","center","TileLayer","url","attribution","Home","fetch","then","resp","json","movies","records","catch","err","navigator","geolocation","getCurrentPosition","coords","error","code","message","enableHighAccuracy","to","App","handleDBUpdate","jsonDB","city","hasOwnProperty","place","comments2","undefined","putRequesteInDB","ref","set","jsonData","handleClick","doc","country","loading","activeDocRef","activeTab","jsonURL","jsonKey","on","querySnapShot","val","JSON","stringify","this","path","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.36f70817.chunk.js","sourcesContent":["import Firebase from \"firebase\";\r\n\r\nconst config = {\r\n\r\n    apiKey: \"AIzaSyBHf0Ov6I_tkRSZUFnfvw01i2KhRFDmEQ8\",\r\n    authDomain: \"bgu-project.firebaseapp.com\",\r\n    databaseURL: \"https://bgu-project-default-rtdb.firebaseio.com\",\r\n    projectId: \"bgu-project\",\r\n    storageBucket: \"bgu-project.appspot.com\",\r\n    messagingSenderId: \"611454908155\",\r\n    appId: \"1:611454908155:web:7ba6cc379c1c1e82e0a25e\",\r\n    measurementId: \"G-9P4GYD0677\"\r\n      \r\n }\r\n\r\n//!firebase.apps.length ? firebase.initializeApp(config) : null;\r\nconst app = Firebase.initializeApp(config);\r\nexport const db = app.database();\r\n","import L from \"leaflet\";\n\nexport const VenueLocationIcon = L.icon({\n  iconUrl: require(\"../assets/venue_location_icon.svg\"),\n  iconRetinaUrl: require(\"../assets/venue_location_icon.svg\"),\n  iconAnchor: null,\n  shadowUrl: null,\n  shadowSize: null,\n  shadowAnchor: null,\n  iconSize: [25, 25],\n  className: \"leaflet-venue-icon\",\n});\n","import { Button } from 'react-bootstrap';\nimport React, {useState} from \"react\";\nimport { Popup } from \"react-leaflet\";\n\n\nconst MarkerPopup = (props) => {\n  const { address,description,id,comments } = props.data;\n  const {updateDB, data } = props;\n  const  [showText, setShowText ]= useState(false)\n  const  [text, setText ]= useState('')\n\n   function poiUpdae(e) {\n     console.log( id + ' '+text)\n    updateDB('100',text);\n  }\n\n\n\n  return (\n    <Popup>\n      <div> {description}</div>\n      <div>{address} </div>\n      <div>הערות גולשים:</div>\n      <div>{comments}</div>\n      <Button onClick={()=> {setShowText(true); }}>\n        לחץ להוספת פרטים\n      </Button>\n\n      {\n       showText? \n        <div>\n            <textarea type='text'  onChange={e => {setText(e.target.value); console.log(text)}}>\n            </textarea>\n            <Button onClick={poiUpdae}>\n              שמור שינויים\n            </Button>\n        </div>\n        : null\n      }\n     \n\n    </Popup>\n  );\n};\n\nexport default MarkerPopup;\n","import React, { useEffect } from \"react\";\nimport { Marker } from \"react-leaflet\";\nimport { VenueLocationIcon } from \"./VenueLocationIcon\";\nimport MarkerPopup from \"./MarkerPopup\";\n\nconst VenueMarkers = (props) => {\n  const { tlv,bs,jlm,showBS,showTLV,showJLM,updateDB } = props;\n\n\n\n  const markersTLV = tlv.map((venue, i) => (\n    <Marker key={i} position={venue.geometry} icon={VenueLocationIcon}>\n      <MarkerPopup updateDB={updateDB} data={venue} />\n    </Marker>\n  ));\n\n  const markersbs = bs.map((venue, i) => (\n    <Marker key={i} position={venue.geometry} icon={VenueLocationIcon}>\n      <MarkerPopup updateDB={updateDB} data={venue} />\n    </Marker>\n  ));\n\n  const markersjlm = jlm.map((venue, i) => (\n    <Marker key={i} position={venue.geometry} icon={VenueLocationIcon}>\n      <MarkerPopup updateDB={updateDB} data={venue} />\n    </Marker>\n  ));\n\n\n  \n  return <>\n            {showTLV? markersTLV : null}\n            {showBS? markersbs: null}\n            {showJLM? markersjlm: null}\n  </>;\n};\n\nexport default VenueMarkers;\n","import React, { useState, useEffect } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport data from \"../assets/data.json\";\nimport Markers from \"./VenueMarkers\";\nimport { Button, Container,Row,Col } from 'react-bootstrap';\n\n\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst MapView = (props) => {\n  const [state, setState] = useState({\n    currentLocation: { lat: 31.268733, lng: 34.7661248  },\n    zoom: 8,\n    data:props.db,\n    showTLV:false,\n    showBS:true,\n    showJLM:false,\n    updateDB:props.updateDB\n  });\n\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (location.state.latitude && location.state.longitude) {\n      const currentLocation = {\n        lat: location.state.latitude,\n        lng: location.state.longitude,\n      };\n      console.log(state);\n      setState({\n        ...state,\n        data: {\n          tlv: state.data.tlv.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n          bs: state.data.bs.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng],\n          }),\n        \n        jlm: state.data.jlm.concat({\n          name: \"new\",\n          geometry: [currentLocation.lat, currentLocation.lng],\n        })\n      }\n      ,\n        currentLocation,\n      });\n      history.replace({\n        pathname: \"/map\",\n        state: {},\n      });\n    }\n  }, [location]);\n\n  return (\n      <Container fluid  className=\"text-light bg-blue py-3\">\n          <Row>\n            <Col>\n              <h1>\n                <span> שומרים על הבניינים לשימור</span>\n                <span role=\"img\" aria-label=\"אוהל\" className=\"mx-1\">\n                  \n                </span>\n\n              </h1>\n              <h2>ריכוז מאגרי מידע על מבנים לשימור במדינת ישראל</h2>\n            </Col>\n          </Row>\n        <Row>\n          <Col>\n          <h2>\n              תלחצי עלינו\n\n              </h2>\n            <Button onClick = {()=>setState({...state, showTLV: !state.showTLV})}>\n              תל אביב\n              </Button>\n              <Button onClick =  {()=>setState({...state, showBS: !state.showBS})}>\n              לוס-אנג'ס\n              </Button>\n              <Button onClick = {()=>setState({...state, showJLM: !state.showJLM})}>\n              ירושלים\n              </Button>\n     \n          </Col>\n        </Row>\n        <Row>\n          <Col>\n          \n            <Map center={state.currentLocation} zoom={state.zoom}>\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              />\n              <Markers updateDB={state.updateDB} db={props.db} tlv={state.data.tlv} bs = {state.data.bs} jlm={state.data.jlm} showTLV = {state.showTLV} showBS={state.showBS} showJLM={state.showJLM}/>\n            </Map>\n          </Col>\n        </Row>\n      </Container>\n\n\n  );\n};\n\nexport default MapView;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {Airtable} from 'airtable';\n\nconst Home = () => {\n  const [state, setState] = useState({\n    longitude: 0,\n    latitude: 0,\n  });\n\n\n\n  useEffect(() => {\n    fetch('https://api.airtable.com/v0/appgOPm5an5ZzNvkk/favorites?api_key=keyiw9cfT8UR5IwVM')\n    .then((resp) => resp.json())\n    .then(data => {\n       this.setState({ movies: data.records });\n    }).catch(err => {\n      // Error :(\n    });\n\n    navigator.geolocation.getCurrentPosition(\n      function (position) {\n        // console.log(position);\n        setState({\n          longitude: position.coords.longitude,\n          latitude: position.coords.latitude,\n        });\n      },\n      function (error) {\n        console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n      },\n      {\n        enableHighAccuracy: true,\n      }\n    );\n  }, []);\n\n  return (\n    <div>\n      <h1>Geolocation</h1>\n      <p>Latitude: {state.latitude}</p>\n      <p>longitude: {state.longitude}</p>\n\n      <Link\n        to={{\n          pathname: \"/map\",\n          // state: {\n          //   hello: 'world'\n          // }\n          state,\n        }}\n      >\n        See marker\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { Component,useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport firebase from \"./firestore/firebase\";\nimport dataDB from \"./assets/data.json\";\nimport {db} from './firestore/firebase';\n\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport MapView from \"./components/MapView\";\nimport Home from \"./components/Home\";\n//keyiw9cfT8UR5IwVM\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      loading:true,\n      activeDocRef: undefined,\n      activeTab:\"welcome\",\n      jsonURL:\"https://api.jsonbin.io/b/602fced5bd6b755d0199c538\",\n      jsonKey:\"$2b$10$2/NjcZqLfdoBPkpWyT71BuJeCNvU8FXl8QLhGcnAJUdAdbLdsjYK.\"\n\n    };\n    // const db = firebase.settings({\n    //   timestampsInSnapshots: true\n    // });\n  }\n  \n  componentDidMount() {\n    db.ref('/').on('value', querySnapShot => {\n      let data = querySnapShot.val() ? querySnapShot.val() : {};\n      console.log(`data: ${JSON.stringify(data)}`)\n      this.setState({jsonDB:data, loading:false})\n    });\n\n}\n\n\n    // console.log(\"mounting APP\");\n    // let url = this.state.jsonURL\n    // fetch(url, {\n    //   method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n    //   mode: \"cors\", // no-cors, *cors, same-origin\n    //   cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    //   credentials: \"same-origin\", // include, *same-origin, omit\n    //   headers: {\n    //     \"secret-key\": this.state.jsonKey\n          \n    //   }\n    // })\n    //   .then((res) => res.json())\n    //   .then((data) => {\n    //     this.setState((prevState) => ({ jsonData: data }));\n    //     console.log(data)\n    //   });\n  \n\n\n  handleDBUpdate = (id,text) => {\n    const data = this.state.jsonDB\n    for (var city in data) {\n      if (data.hasOwnProperty(city)) {\n        for (var place in city){\n          console.log(data[city][place])\n          if (data[city][place]){\n            if (data[city][place]['id'] === id){\n              console.log('HEREEE')\n              var comments = data[city][place]['comments'] \n              var comments2 = (comments === undefined) ? text : comments + '\\n ' + text\n  \n              data[city][place]['comments']  = comments2\n              console.log(data);\n              this.putRequesteInDB(data)\n\n              return\n            }\n\n          }\n\n        }\n\n\n      }\n    }\n  }\n\n\n  putRequesteInDB = (data) => {\n    db.ref('/').set(data);\n    this.setState({jsonData:data})\n  }\n\n  // handleDBUpdate = (id,text) =>{\n  //   let db = this.state.db\n  //   let doc = db.doc(id);\n  //   return doc.update({\n  //       text: text\n  //   })\n  //   .then(() => {\n  //       console.log(\"Document successfully updated!\");\n  //   })\n  //   .catch((error) => {\n  //       // The document probably doesn't exist.\n  //       console.error(\"Error updating document: \", error);\n  //   });\n  // }\n\n  handleClick = (e) =>{\n    \n      const db = this.state.db\n      \n       db.doc(\"LA\").set({\n         name: \"Los Angeles\",\n         state: \"CA\",\n         country: \"USA\"\n     })\n     .then(() => {\n         console.log(\"Document successfully written!\");\n     })\n     .catch((error) => {\n         console.error(\"Error writing document: \", error);\n     });\n  }\n\n\n\n\n\n  render() {\n     return (\n      <div>\n      <button onClick={this.handleClick}>מניש</button>\n      <Router>\n        <Switch>\n          <Route path=\"/map\">\n            {\n              this.state.loading? 'loading' :            \n              <MapView updateDB = {this.handleDBUpdate} db ={this.state.jsonDB}/>\n\n            }\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/venue_location_icon.2ceaf661.svg\";"],"sourceRoot":""}